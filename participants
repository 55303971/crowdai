select api_key from participants
;
\q
select terminate_backend(pid) from pg_stat_activity where datname = 'crowdai_development';
select pg_terminate_backend(pid) from pg_stat_activity where datname = 'crowdai_development';
select pg_terminate_backend(pid) from pg_stat_activity where datname = 'crowdai_development';
\q
\dt
\q
select id, challenge, api_key from challenges;
update challenges set api_key = '36d9604490cd8da5a07372917ed58128' where id = 7;
select id, challenge, api_key from challenges;
update challenges set api_key = 'd9014c5f0756b4c37e4ec0c4508d1642' where id = 8;
\q
update challenges set status_cd ='running' where challenge_id = 8;
update challenges set status_cd ='running' where id = 8;
update challenges set status_cd ='starting_soon' where id = 8;
\q
\d challenges
select * from images;
\x
select * from images;
select * from images where imagable_type = 'Challenge';
select * from images where imageable_type = 'Challenge';
select * from images where imageable_type = 'Challenge';
select id, imageable_id, image_file_name from images where imageable_type = 'Challenge';
\x
select id, imageable_id, image_file_name from images where imageable_type = 'Challenge';
select id, imageable_id, image_file_name, imageable_type from images where imageable_type = 'Challenge';
select distinct imageable_type from images;
select id, imageable_id, image_file_name, imageable_type from images where imageable_type = 'Article'
;
select id, imageable_id, image_file_name, imageable_type from images where imageable_type = 'Participant'
;
\q
\dt
\q
update submissions set post_challenge = false where id = 8;
update submissions set post_challenge = false where challenge_id = 8;
\q
select * from comments order by id desc limti 5;
select * from comments order by id desc limit 5;
select id, topic_id, created_at, updated_at from comments order by id desc limit 5;
\q
\dt
select count(*) from posts;
drop table posts;
\q
\dt
select count(*) from posts
\q
\dt
\q
\dt
\q
\l
\q
\l
\q
\q
select id, start_date, start_time, end_date, end_time, start_dttm, end_dttm from challenges where id = 8;
update challenges set start_dttm = to_timestamp('2017/06/17 09:00','YYYY/MM/DD HH:MI'), end_dttm = to_timestamp('2017/08/17 17:00','YYYY/MM/DD HH:MI')
where challenge id = 8;
 update challenges set start_dttm = to_timestamp('2017/06/17 09:00','YYYY/MM/DD HH:MI'), end_dttm = to_timestamp('2017/08/17 17:00','YYYY/MM/DD HH:MI') where challenge_id = 8;
 update challenges set start_dttm = to_timestamp('2017/06/17 09:00','YYYY/MM/DD HH:MI'), end_dttm = to_timestamp('2017/08/17 17:00','YYYY/MM/DD HH:MI') where id = 8;
 update challenges set start_dttm = to_timestamp('2017/06/17 09:00','YYYY/MM/DD HH:MI'), end_dttm = to_timestamp('2017/08/17 05:00','YYYY/MM/DD HH:MI') where id = 8;
 update challenges set start_dttm = to_timestamp('2017/06/17 09:00','YYYY/MM/DD HH:MI'), end_dttm = to_timestamp('2017/09/17 05:00','YYYY/MM/DD HH:MI') where id = 8;
\q
\x
select * from challenges where id =8;
update challenges_set status_cd = 'starting_soon' where id = 8;
update challenges set status_cd = 'starting_soon' where id = 8;
\q
quit
\q
\x
select * from dataset_files order by id desc limit 1;
update dataset_files set dataset_file_s3_key = 'dataset_files/challenge_8/osim-rl-README.pdf' where id = 40;
\q
select * from participants where email = 'olivier.naret@epfl.ch';
\x
select * from participants where email = 'olivier.naret@epfl.ch';
update participants set organizer_id = 6 where id in (141,157)
select * from participants where email = 'olivier.naret@epfl.ch';
update participants set organizer_id = 6 where id in (141,157)
select * from participants where email = 'olivier.naret@epfl.ch';
select * from participants where id in (141,157)
;
;
update participants set organizer_id = 6 where id in (141,157);
select * from participants where id in (141,157)
;
\q
\dt challenges
\d challenges
\q
select count(*) from leaderboards where challenge_id = 8;
select submission_id, media_large, media_thumbnail, media_content_type from leaderboards where challenge_id = 8;
select submission_id, media_large, media_thumbnail, media_content_type from leaderboards where media_large is null;
select count(*) from leaderboards where challenge_id = 8;
select submission_id from leaderboards where challenge_id = 8 and media_large is null;
\d submissions
select id from submissions where media_large is null;
select id from submissions where media_large is null and challenge_id = 8;
select id from submissions where media_large is null and challenge_id = 8;
\copy (select id from submissions where media_large is null and challenge_id = 8) to '~/all.csv' with (format csv, delimiter ',', header true);
select s.id, l.x from submissions s left outer join leaderboards l on l.submission_id = s.id where s.challenge_id = 8; 
select s.id, l.submission_id from submissions s left outer join leaderboards l on l.submission_id = s.id where s.challenge_id = 8; 
select s.id, l.submission_id from submissions s left outer join leaderboards l on l.submission_id = s.id where s.challenge_id = 8 order by 2 desc;
select s.id, l.submission_id from submissions s left outer join leaderboards l on l.submission_id = s.id where s.challenge_id = 8 order by 2 asc;
select s.id, l.submission_id from submissions s left outer join leaderboards l on l.submission_id = s.id where s.challenge_id = 8 and s.media_large is null order by 2 asc;
\copy (select s.id, l.submission_id from submissions s left outer join leaderboards l on l.submission_id = s.id where s.challenge_id = 8 and s.media_large is null order by 2 asc) to '~/missing.csv' with (format csv, delimiter ',', header true);
\q
select id, name from participants where email = 'sean.carroll@epfl.ch';
select id, name, bio from participants where email = 'sean.carroll@epfl.ch';
update participants set bio = null where id  = 1;
select id, name, bio from participants where email = 'sean.carroll@epfl.ch';
\q
select * from participants where id = 1245;
\d
\x
\d
select * from participants where id = 1245;
update participants set email = 'stelmaszczykadam@gmail.com', account_disabled = false, account_disabled_reason = null, account_disabled_dttm = null where  id = 1245;
\q
select * from submissions where challenge_id = 8;
select * from submissions where challenge_id = 8  and media_content_type is null;
select * from submissions where challenge_id = 8  and media_content_type is null;
select * from submissions where challenge_id = 8  and media_content_type is null;
select id, created_at, score from submissions where challenge_id = 8  and media_content_type is null;
\copy (select id, created_at, score from submissions where challenge_id = 8  and media_content_type is null) to '~/missing2.csv' with (format csv, delimiter ',', header true);
\copy (select id, created_at, score from submissions where challenge_id = 8  and media_content_type is null order by created_at desc) to '~/missing2.csv' with (format csv, delimiter ',', header true);
select challenge_id, count(*) from submissions group by challenge_id
;
\q
select * from emails order by id desc limit 5;
\q
select count(*) from participants where receive_email_email is true;
select count(*) from email_preferences where receive_email_email is true;
select count(*) from email_preferences where receive_every_email is true;
\q
select id, challenge from challenges;
select count(*) from leaderboards where id = 7;
select count(*) from leaderboards where challenge_id = 7;
select count(*) from leaderboards where challenge_id = 8;
select * from leaderboards where challenge_id = 8;
select * from participants where email is null;
select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id where challenge_id = 7;
select p.email, l.* from leaderboards l participants p where l.participant_id = p.id where challenge_id = 7;
select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id where challenge_id = 7;
select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id and challenge_id = 7;
select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id and challenge_id = 7;
select count(*) from leaderboards where challenge_id = 7;
select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id and challenge_id = 8;
select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id and challenge_id = 8;
select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id and challenge_id = 8;
\copy (select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id and challenge_id = 8) to '~/leaderboard.csv' with (format csv, delimiter ',', header true);
\copy (select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id and challenge_id = 8) to '~/leaderboard.csv' with (format csv, delimiter ',', header true);
\copy (select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id and challenge_id = 8) to '~/leaderboard.csv' with (format csv, delimiter ',', header true);
\copy (select p.email, l.* from leaderboards l, participants p where l.participant_id = p.id and challenge_id = 8) to '~/leaderboard.csv' with (format csv, delimiter ',', header true);
\q
select count(*) from participants;
\q
update email_preferences set receive_every_email = false, receive_daily_digest = true, receive_weekly_digest = false where participant_id = 1;
update email_preferences set receive_every_email = false, receive_daily_digest = false, receive_weekly_digest = false where participant_id != 1;
select count(*) from participants;
\q
select count(*) from participants;
\dt
\q
select count(*) from participants;
\q
\x
select * from email_preference where id = 1;
select * from email_preferences where id = 1;
select * from email_preferences where id = 1;
select * from email_preferences where id = 1;
select * from emails order by id desc limit 5;
select * from emails order by id desc limit 5;
select * from email_preferences where id = 1;
select * from email_preferences where participant_id;
select * from email_preferences where participant_id = 1;
select * from emails order by id desc limit 5;
select * from emails order by id desc limit 1;
select * from emails order by id desc limit 1;
\x
\x
select * from emails order by id desc limit 5;
select * from emails order by id desc limit 5;
select * from emails order by id desc limit 5;
\q
select id, organizer from organizers;
select * from participants where email = 'ivan.eggel@hevs.ch';
update participants set organizer_id = 7 where id = 1361;
\q
\q
select * from conferences;
\q
SELECT column_name
FROM information_schema.columns
WHERE table_name   = 'words';
SELECT column_name
FROM information_schema.columns
WHERE table_name   = 'words';
\q
\dt
select count(*) from epfl_import_details;
delete from epfl_import_details;
select count(*) from epfl_imports;
\q
\q
select id, name from conferences;
update conferences set id = 2 where id  = 3;
select id, name from conferences;
insert into events (conference_id, name, start, finish) select 2,name,start,finish from events where conference_id = 1; 
insert into events (conference_id, name, start, finish, created_at, updated_at) select 2,name,start,finish, now(),now() from events where conference_id = 1; 
select * from events where conference_id = 2;
update events set name = 'To be announced' from events where conference_id = 2 and name not like '%Coffee%' and name not like '%Lunch%';
update events set name = 'To be announced' where conference_id = 2 and name not like '%Coffee%' and name not like '%Lunch%';
update events set start = start - interval '1 days', finish = finish - interval '1 days';
update events set start = start + interval '1 days', finish = finish + interval '1 days';
update events set start = start - interval '1 days', finish = finish - interval '1 days' where conference_id = 2;
\q
begin;
UPDATE events SET START = START + INTERVAL '1 years' WHERE conference_id = 2 AND id NOT IN (40,41);
SELECT * FROM events WHERE conference_id = 2 ORDER BY START
;
commit;
SELECT * FROM events WHERE conference_id = 2 ORDER BY START
;
\q
\dt
select * from sponsors;
select * from workshops;
delete from workshops;
\q
\d speakers
\q
\d speakers
\q
select count(*) from graders;
\d graders
\q
\dt
\q
\dt
\q
SELECT datname, oid FROM pg_database WHERE datname = 'crowdai_development'
;
\q
\dt
select * from email_preferences_tokens
;
select count(*) from participants;
select count(*) from email_preferences;
\dt email_preferences
\d email_preferences
select * from submissons order by id desc limit 5;
select * from submissions order by id desc limit 5;
\q
select * from participants where email = 'sean.carroll@epfl.ch';
\q
select * from comments order by id desc limit 1;
select * from email_preferences order by updated_at desc limit 20;
\q
show shared_buffers;
select pg_size_pretty(pg_relation_size('challenges'));
\q
show data_dictionary;
\q
select * from submissions order by updated_at desc limit 5;
select * from submissions order by updated_at desc limit 5;
select * from submissions order by updated_at desc limit 5;
\q
create table submissions_backup_290917 as select * from submissions;
update submissions set post_challenge = false where challenge_id = 9;
\q
update submissions set post_challenge = false where challenge_id = 9;
\q
select * from submissions order by id desc limit 4;
select * from submissions order by id desc limit 4;
\q
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
\q
select count(*) from visits;
\q
select * from challenge_rounds;
\q
select * from challenge_rounds;
select * from challenge_rounds;
select * from challenge_rounds set submission_limit = 5, submission_limit_period_cd = 'day';
select * from challenge_rounds;
select * from challenge_rounds;
update challenge_rounds set start_dttm = start_date, end_dttm = end_date;
update  challenge_rounds set submission_limit = 5, submission_limit_period_cd = 'day';
\q
\dt
\q
select count(*) from participants;
\q
\dt
select count(*) from participants;
\x
select * from participants;
\q
select * from leaderboards where challenge_id = 8;
select rownum from leaderboards where challenge_id = 8 order by 1;
select row_num from leaderboards where challenge_id = 8 order by 1;
\q
begin;
select * from submissions where challenge_round_id is null;
select challenge_id, count(*) from submissions where challenge_round_id is null group by challenge_id;
select distinct challenge_round_id from submissions where challenge_id = 8;
update submissions set challenge_round_id = 1 where challenge_id = 8 and challenge_round_id is null;
commit;
\q
select * from submissions where challenge_round_id is null;
update submissions set challenge_round_id = 1 where challenge_id = 8 and challenge_round_id is null;
select * from submissions where challenge_round_id is null;
select id, challenge_id, challenge_round_id, created_at, updated_at order by id desc;
select id, challenge_id, challenge_round_id, created_at, updated_at from submissions order by id desc;
select id, challenge_id, challenge_round_id, created_at, updated_at from submissions order by id desc;
select id, challenge_id, challenge_round_id, created_at, updated_at from submissions order by id desc;
select id, challenge_id, challenge_round_id, created_at, updated_at from submissions order by id desc;
select id, challenge_id, challenge_round_id, created_at, updated_at from submissions order by id desc;
select id, challenge_id, challenge_round_id, created_at, updated_at from submissions order by id desc;
select id, challenge_id, challenge_round_id, created_at, updated_at from submissions order by id desc;
\q
\dt
select * from sponsors order by id desc;
\q
\dt
select count(*) from submissions;
\q
select * from challenges where id = 8;
\x
select * from challenges where id = 8;
update challenges set end_date = '2017-11-04' where id = 8;
select * from challenges where id = 8;
select * from challenge_round where challenge_id = 8;
select * from challenge_rounds where challenge_id = 8;
select * from challenges where id = 8;
update challenges set status_cd = 'running' where challenge_id = 8;
update challenges set status_cd = 'running' where id = 8;
select * from challenges where id = 8;
     select id, challenge, status_cd from challenges where id = 8;
     select id, challenge, status_cd from challenges where id = 8;
     select id, challenge, status_cd, end_dttm from challenges where id = 8;
update challenges set end_dttm = '2017-11-04 17:30:00' where id = 8;
     select id, challenge, status_cd, end_dttm from challenges where id = 8;
update challenges set status_cd = 'running' where id = 8;
     select id, challenge, status_cd, end_dttm from challenges where id = 8;
\q
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
select * from submissions order by id desc limit 3;
\q
select name, organization, email, title, summary, equipment from workshops;
\q
\dt
select count(*) from epfl_imports;
select count(*) from epfl_import_details;
delete from epfl_import_details;
\q
insert into workshop_sessions (conference_id, title, organizer_name, organizer_email, description, capacity) select 2, title, name, email, summary, participants from workshops;
insert into workshop_sessions (conference_id, title, organizer_name, organizer_email, description, capacity, created_at, updated_at) select 2, title, name, email, summary, participants, current_timestamp, current_timestamp from workshops;
\q
\dt
select count(*) from epfl_import_details;
delete form epfl_import_details;
delete from epfl_import_details;
\q
select * from dataset_downloads order by id desc limit 5;
select * from dataset_file_downloads order by id desc limit 5;
\q
select * from challenge_rounds where challenge_id = 8;
update challenge_rounds set active = 'f' where id = 1;
select * from challenges where id = 8;
\dt
\d challenges
 select id, start_date, end_date, start_time, end_time from challenges where id = 8;
update challenges set start_date = '2017-11-04', end_date = '2017-11-10', start_time = '17:30:00' where id = 8;
 select id, start_date, end_date, start_time, end_time from challenges where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd from challenges where id = 8;
update challenges set start_date = '2017-11-04', end_date = '2017-11-10', start_time = '17:30:00' where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd from challenges where id = 8;
update challenges set start_date = '2017-11-04', end_date = '2017-11-10', start_time = '17:30:00', status_cd = 'running' where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd from challenges where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd from challenges where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd from challenges where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd, start_dttm, end_dttm from challenges where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd, start_dttm, end_dttm from challenges where id = 8;
update challenges set start_date = '2017-11-04', end_date = '2017-11-10', start_time = '17:30:00', start_dttm = '2017-11-04 17:30:00', end_dttm = '2017-11-10 17:30:00' where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd, start_dttm, end_dttm from challenges where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd, start_dttm, end_dttm from challenges where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd, start_dttm, end_dttm from challenges where id = 8;
update challenges set start_date = '2017-11-04', end_date = '2017-11-10', start_time = '17:30:00', start_dttm = '2017-11-04 17:30:00', end_dttm = '2017-11-10 17:30:00', status_cd = 'running'  where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd, start_dttm, end_dttm from challenges where id = 8;
 select id, start_date, end_date, start_time, end_time, status_cd, start_dttm, end_dttm from challenges where id = 8;
\q
\x
select * from dataset_file_downloads order by id desc limit 1;
select * from dataset_file_downloads order by id desc limit 10;
\q
select * from challenge_rounds where challenge_id = 8;
\x
select * from challenge_rounds where challenge_id = 8;
update challenge_rounds set submission_limit = 5, submission_limit_period_cd = 'round' where id = 12;
select * from challenge_rounds where challenge_id = 8;
\q
\dt
\d challenges
select id, start_date, end_date, start_time, end_time from challenges where id = 8;
select id, start_date, end_date, start_time, end_time, start_dttm, end_dttm from challenges where id = 8;
update challenges set end_dttm = '2017-11-13 12:00:00', end_time = '12:00:00' where id = 8;
select id, start_date, end_date, start_time, end_time, start_dttm, end_dttm from challenges where id = 8;
update challenges set end_dttm = '2017-11-13 12:00:00', end_time = '12:00:00', end_date = '2017-11-13' where id = 8;
select id, start_date, end_date, start_time, end_time, start_dttm, end_dttm from challenges where id = 8;
\q
\q
select * from challenges where id = 8;
\dt
\d challenges
 select id, challenge, start_date, end_date, start_dttm, end_dttm from challenges;
 select id, challenge, start_date, end_date, start_dttm, end_dttm from challenges where id = 8;
select * from challenge_rounds where challenge_id = 8;
select id, challenge_round_id, challenge_round, start_date, end_date, start_time, end_time from challenge_rounds where challenge_id = 8;
select id, challenge_id, challenge_round, start_date, end_date, start_time, end_time from challenge_rounds where challenge_id = 8;
select id, challenge_id, challenge_round, start_date, end_date, start_time, end_time, active from challenge_rounds where challenge_id = 8;
select id, challenge_id, challenge_round, start_date, end_date, start_time, end_time, active from challenge_rounds where challenge_id = 8;
select id, challenge_round_id, challenge_round, start_date, end_date, start_time, end_time from challenge_rounds where challenge_id = 8;
select id, challenge_round_id, challenge_round, start_date, end_date, start_time, end_time from challenge_rounds where challenge_id = 8;
 select id, challenge, start_date, end_date, start_dttm, end_dttm from challenges where id = 8;
 select id, challenge, start_date, end_date, start_dttm, end_dttm, status_cd from challenges where id = 8;
select id, challenge_id, challenge_round, start_date, end_date, start_time, end_time, active from challenge_rounds where challenge_id = 8;
 select id, challenge, start_date, end_date, start_dttm, end_dttm, status_cd from challenges where id = 8;
select id, challenge_id, challenge_round, start_date, end_date, start_time, end_time, active from challenge_rounds where challenge_id = 8;
 select id, challenge, start_date, end_date, start_dttm, end_dttm, status_cd from challenges where id = 8;
 select id, challenge, start_date, end_date, start_dttm, end_dttm, status_cd from challenges where id = 8;
select id, challenge_id, challenge_round, start_date, end_date, start_time, end_time, active from challenge_rounds where challenge_id = 8;
select id, challenge_id, challenge_round, start_date, end_date, start_time, end_time, active from challenge_rounds where challenge_id = 8;
select id, challenge_id, challenge_round, start_date, end_date, start_time, end_time, active from challenge_rounds where challenge_id = 8;
update challenge_rounds set active = f where id = 12;
update challenge_rounds set active = false where id = 12;
select id, challenge_id, challenge_round, start_date, end_date, start_time, end_time, active from challenge_rounds where challenge_id = 8;
update challenge_rounds set active = true where id = 12;
\q
select * from participants where email = 'ivan.eggel@hevs.ch'
;
update participants set admin = true where id = 1361;
select * from participants where email = 'ivan.eggel@hevs.ch'
;
\q
select id, challenge, status_cd, clef_task_id where clef_task_id is not null;
select id, challenge, status_cd, clef_task_id from challenges where clef_task_id is not null;
update challenges set status_cd = 'running' where clef_task_id is not null;
select id, challenge, status_cd, clef_task_id from challenges where clef_task_id is not null;
\q
update challenges set status_cd = 'running' where clef_task_id is not null;
update challenges set status_cd = 'running' where clef_task_id is not null;
select id, challenge, current_round from challenges;
\q
update challenges set status_cd = 'running' where clef_task_id is not null;
\q
select id, challenge from challenges;
select * from submissions where challenge_id = 8;
select id, participant_id, challenge_round_id from submissions where challenge_id = 8;
 \s participants
